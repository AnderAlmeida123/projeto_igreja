// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model pessoas {
  id              String @id @default(uuid()) @unique
  nome            String  @db.VarChar(255) 
  cpf             String  @db.Char(11)  @unique
  dataNascimento  DateTime  @db.Date()
  sexo            String
  endereco        endereco[]
  contato         contato[]
  comunidade      comunidade[]
  sacramento      sacramento[]
  setor           setor[]
  membroSetor     membroSetor[]
  turma           turma[]
  membrosTurma    membrosTurma[]
}

model contato{
  id              String @id @default(uuid()) @unique
  celular         String  @db.Char(11)
  telContato     String  @db.Char(11)
  email           String  @db.VarChar(100)
  pessoas   pessoas @relation(fields: [pessoasId], references: [id])
  pessoasId   String 
}

model endereco {
  id              String  @id @default(uuid())  @unique
  cep             String  @db.Char(9)
  estado          String  @db.VarChar(255)
  cidade          String  @db.VarChar(255)
  bairro          String  @db.VarChar(255)
  rua             String  @db.VarChar(255)
  numero          String  @db.Char(5)
  referencia      String?
  pessoas pessoas  @relation(fields: [pessoasId],references: [id])
  pessoasId       String 
}

model sacramento {
  id               String  @id @default(uuid()) @unique
  localSacramento String  @db.Text
  dataHoraSacramento  DateTime  @db.Timestamp()
  pessoas  pessoas @relation(fields: [pessoasId],references: [id])
  pessoasId      String
  tipoSacramento tipoSacramento @relation(fields: [tipoSacramentoId],references: [id])
  tipoSacramentoId  String
}

model tipoSacramento {
  id               String  @id @default(uuid()) @unique
  tipoSacramento  String  @db.VarChar(255)
  sacramento      sacramento[]
}

model comunidade {
  id               String  @id  @default(uuid())  @unique
  comunidade       String  @db.VarChar(100)
  bairro           String  @db.VarChar(100)
  pessoas   pessoas @relation(fields: [responsavel],references: [id])  
  responsavel      String  @db.VarChar(100) 
  calendario       calendario[]
  setor            setor[]
}

model calendario {
  id               String  @id @default(uuid()) @unique
  tipoEvento      String  @db.Text
  dataHora        DateTime @db.Timestamp()
  tituloEvento    String   @db.VarChar(255)
  descricao        String   @db.Text
  comunidade   comunidade @relation(fields: [comunidadeId],references: [id])
  comunidadeId    String
  evento   tipoEvento @relation(fields: [tipoEventoId],references: [id])
  tipoEventoId  String
}

model tipoEvento {
  id              String @id @default(uuid()) @unique
  tipoEvento     String  @db.VarChar(255)
  calendario      calendario[]
}

model setor {
  id              String @id @default(uuid()) @unique
  descricao       String  @db.Text
  setor           String  @db.VarChar(255)
  pessoas       pessoas @relation(fields: [reponsavel],references: [id])
  reponsavel      String  @db.VarChar(100)
  comunidade    comunidade  @relation(fields: [comunidadeId],references: [id])
  comunidadeId    String
  membroSetor   membroSetor[]
  turma         turma[]
}

model membroSetor {
  id              String @id  @default(uuid())  @unique
  dataEntrada     DateTime @db.Date
  dataSaida       DateTime @db.Date
  setor        setor  @relation(fields: [setorId],references: [id])
  setorId         String
  pessoas      pessoas  @relation(fields: [membrosId],references: [id])
  membrosId       String
}

model turma {
  id              String  @id @default(uuid())  @unique
  dataInicio      DateTime  @db.Date
  dataTermino     DateTime  @db.Date
  turma           String    @db.VarChar(255)
  pessoas       pessoas @relation(fields: [profId],references: [id])
  profId          String      
  setor         setor   @relation(fields: [setorId],references: [id])
  setorId         String
  membrosTurma    membrosTurma[]
}

model membrosTurma {
  id              String  @id @default(uuid())
  pessoas      pessoas  @relation(fields: [membrosTurmaId], references: [id])
  membrosTurmaId  String
  turma         turma   @relation(fields: [turmaId], references: [id])
  turmaId         String
}

