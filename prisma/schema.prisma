// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model pessoas {
  id              String @id @default(uuid()) @unique
  nome            String  @db.VarChar(255) 
  cpf             String  @db.Char(11)  @unique
  dataNascimento  DateTime  @db.Date()
  sexo            String
  endereco        endereco[]
  contato         contato[]
  comunidade      comunidade[]
  sacramento      sacramento[]

}

model contato{
  id              String @id @default(uuid()) @unique
  celular         String  @db.Char(11)
  tel_contato     String  @db.Char(11)
  email           String  @db.VarChar(100)
  pessoas   pessoas @relation(fields: [pessoas_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  pessoas_id   String 
}

model endereco {
  id              String  @id @default(uuid())  @unique
  cep             String  @db.Char(9)
  estado          String  @db.VarChar(255)
  cidade          String  @db.VarChar(255)
  bairro          String  @db.VarChar(255)
  rua             String  @db.VarChar(255)
  numero          String  @db.Char(5)
  referencia      String?
  pessoas pessoas  @relation(fields: [pessoas_id],references: [id], onDelete: Cascade, onUpdate: Cascade)
  pessoas_id       String 
}

model sacramento {
  id               String  @id @default(uuid()) @unique
  local_sacramento String  @db.Text
  data_hora_sacramento  DateTime  @db.Timestamp()
  pessoas  pessoas @relation(fields: [pessoas_id],references: [id], onDelete: Cascade, onUpdate: Cascade)
  pessoas_id      String
  tipoSacramento tipo_sacramento @relation(fields: [tipo_sacramento_id],references: [id], onDelete: Cascade, onUpdate: Cascade)
  tipo_sacramento_id  String
}

model tipo_sacramento {
  id               String  @id @default(uuid()) @unique
  tipo_sacramento  String  @db.VarChar(255)
  sacramento      sacramento[]
}

model comunidade {
  id               String  @id  @default(uuid())  @unique
  comunidade       String  @db.VarChar(100)
  bairro           String  @db.VarChar(100)
  pessoas   pessoas @relation(fields: [responsavel],references: [id], onDelete: Cascade, onUpdate: Cascade)  
  responsavel      String  @db.VarChar(100) 
  calendario       calendario[]
}

model calendario {
  id               String  @id @default(uuid()) @unique
  tipo_evento      String  @db.Text
  data_hora        DateTime @db.Timestamp()
  titulo_evento    String   @db.VarChar(255)
  descricao        String   @db.Text
  comunidade   comunidade @relation(fields: [comunidade_id],references: [id], onDelete: Cascade, onUpdate: Cascade)
  comunidade_id    String
  tipoEvento   tipo_evento @relation(fields: [tipo_evento_id],references: [id], onDelete: Cascade, onUpdate: Cascade)
  tipo_evento_id  String
}

model tipo_evento {
  id              String @id @default(uuid()) @unique
  tipo_evento     String  @db.VarChar(255)
  calendario      calendario[]
}